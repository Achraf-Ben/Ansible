ADHOC Commands:

# Check connections
ansible -m ping all

# Check hostname on all hosts with shell module
ansible -m shell -a 'hostname' all

# Whoami on all servers with shell  module 
ansible -m shell -a whoami all

# Check diskspace
ansible -m shell -ad 'df -h' all

# Run Whoami with sudo by adding -b (user must have root access without password)
ansible -m shell -a whoami all -b

# Add a user and ask for sudo password, alternative for become if it isn't possible
ansible -b -K -m user -a 'name=username' all

# Check users 
ansible -m shell -a 'getent passwd | grep ansible' all

# Remove user
ansible -b -K -m user -a 'name=newuser state=absent' all

# Play the basic role with a playbook
ansible-playbook -K wordpress.yml --extra-vars "ansible_python_interpreter=/usr/local/bin/python"

# Run a playbook with sudo password(-K) and ssh password (--ask-pass --ssh-extra-args='-o "PubkeyAuthentication=no"')
ansible-playbook -i hosts playbook.yml -K --ask-pass --ssh-extra-args='-o "PubkeyAuthentication=no"' --ssh-extra-args='-o "StrictHostKeyChecking=no"'

--extra-vars "ansible_python_interpreter=/usr/local/bin/python"

# Run apt-get install nginx against a local server
ansible -i ./hosts local --connection=local -b --become-user=root \
    -m shell -a 'apt-get install nginx'

# Run apt-get install nginx against a remote server
ansible -i ./hosts remote -b --become-user=root all \
    -m shell -a 'apt-get install nginx'

# Run ping against localhost
$ ansible -i ./hosts --connection=local local -m ping

# Run check against a local server
ansible -i ./hosts local --connection=local -b --become-user=root \
    -m apt -a 'name=nginx state=installed update_cache=true'

# Run check against a remote server
ansible -i ./hosts remote -b --become-user=root \
    -m apt -a 'name=nginx state=installed update_cache=true'

# Error: sudo: a password is required
1. Open the sudoers file with sudo visudo
2. Add the following line(replace username): username ALL=(ALL) NOPASSWD:ALL

